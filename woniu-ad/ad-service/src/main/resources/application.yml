server:
  port: 20003
spring:
  application:
    name: diap-uc
  profiles:
    active: partlocal
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        server-addr: ${rc.hostname}
        namespace: ${rc.namespace}
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  redis:
    database: ${rds.idx}
    host: ${rds.hostname}
    port: ${rds.port}
    lettuce:
      pool:
        max-active: 10  # 连接池最大连接数（使用负值表示没有限制）
        max-idle: 3  # 连接池中的最小空闲连接
        min-idle: 2  # 连接池中的最大空闲连接
        max-wait: -1  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        time-between-eviction-runs: 20000 #空闲链接检测线程检测周期毫秒（负值表示不检测）(类型为Duration，添加秒)
      shutdown-timeout: 100 #关闭超时时间
#    password: ${rds.password}
    timeout: 10000
  # 数据源配置，实现读写分离
  shardingsphere:
    datasource:
      names: master,slave
      # 主数据源
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${db.master.hostname}:${db.master.port}/diap_db?&useSSL=false&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT
        username: ${db.master.username}
        password: ${db.master.password}
      # 从数据源
      slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${db.slave.hostname}:${db.slave.port}/diap_db?&useSSL=false&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT
        username: ${db.slave.username}
        password: ${db.slave.password}
    masterslave:
      # 读写分离配置
      load-balance-algorithm-type: round_robin
      # 最终的数据源名称
      name: diap_db_source
      # 主库数据源名称
      master-data-source-name: master
      # 从库数据源名称列表，多个逗号分隔
      slave-data-source-names: slave
    props:
      # 开启SQL显示，默认false
      sql:
        show: true

management:
  health:
    db:
      enabled: false

#Mybatisplus config
mybatis-plus:
  mapper-locations: classpath*:mapper/**/**Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.esmartwave.niumeng.diap.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    logic-delete-value: 1
    logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  # mybatis-plus 打印日志
logging:
  level:
    com.esmartwave.niumeng.diap: DEBUG
    org.springframework.web: DEBUG
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    io.swagger.models.parameters.AbstractSerializableParameter: error
feign:
  hystrix:
    enabled: true
ribbon:
  ReadTimeout: 5000 #ribbon读取超时时间，接口处理时间，不包括建立连接时间
  ConnectTimeout: 5000 #ribbon请求连接时间
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000   #断路器超时时间，默认1000ms
# token配置
security:
  jwt:
    secret: otherpeopledontknowdiap
    url: .*login.*
    refreshurl: .*refreshToken.*
    header: Authorization
    prefix: Bearer
    expiration: 14400
#异常邮件提醒配置
mail:
  subjectSource: ${spring.application.name}
  enableMailNotify: "1"
  replaceAll: false
# apollo配置
env: DEV
app:
  id: ${spring.application.name}
apollo:
  meta: http://${ap.hostname}:${ap.port}/
  port: ${ap.port}
  bootstrap:
    enabled: true
    namespaces: application, public.database.options, public.nacos.options, public.rabbit.options, public.redis.options
    eagerLoad:
      enabled: true

#预警邮件发送邮箱
#sendemail:
#  yh-email:
#    address: yh@123.com
#    account: user
#    password: 123123
#  sm-email:
#    address: sm@123.com
#    account: user
#    password: 123123

#加密邮箱密码key
encrypt:
  aseKey: diap0001